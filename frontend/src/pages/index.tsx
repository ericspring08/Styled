import Head from "next/head";
import { useState, useEffect } from "react";
import axios from "axios";
import mockData from "./mockData";

export default function Home() {
  const [gender, setGender] = useState("Men");
  const [clothingType, setClothingType] = useState("Shirts & Tops");
  const [showInitalSurvey, setShowInitialSurvey] = useState(true);
  const [showItemSelection, setShowItemSelection] = useState(false);
  const [showBodyMeasure, setShowBodyMeasure] = useState(false);
  const [showFinalResults, setShowFinalResults] = useState(false);

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        {
          showInitalSurvey &&
            <IntialSurvey surveyFinished={(data:any) => {
              setGender(data.gender);
              setClothingType(data.clothingType);
              setShowInitialSurvey(false);
              setShowBodyMeasure(true);
            }}/>
        }
        {
          showBodyMeasure &&
            <BodyMeasure measureFinished={(data:any) => {
              setShowBodyMeasure(false);
              setShowItemSelection(true);
            }}/>
        }
        {
          showItemSelection &&
            <ItemSelection selectionFinished={(data:any) => {
              setShowItemSelection(false);
              setShowFinalResults(true);
 
            }}
            gender={gender}
            clothingType={clothingType}/>
        } 
        {
          showFinalResults &&
            <ClothingResults/>
        }
      </main>
    </>
  );
}

function ClothingResults() {
  return (
    <>
      <h1>Your Styles!</h1>
    </>
  )
}

function BodyMeasure({measureFinished}:any) {
  return (
    <>
      <h1>Please Allow Camera Access!</h1>
      <button onClick={() => {
        measureFinished();
        }} className="fixed z-90 bottom-10 right-8 btn btn-primary drop-shadow-lg text-3xl hover:drop-shadow-2xl hover:animate-bounce duration-300">Continue</button>
    </>
  )
}

function ItemSelection ({selectionFinished, gender, clothingType}:any) {
  const [items, setItems] = useState<any>(mockData);

  useEffect(() => {
    // console.log(gender);
    // axios.post(
    //   "https://zappos1.p.rapidapi.com/products/list?page=1&limit=100&sort=relevance/desc",
    //   [
    //     {
    //       "facetField": "zc1",
    //       "values": ["Clothing"]
    //     },
    //     {
    //       "facetField": "zc2",
    //       "values": [
    //         clothingType
    //       ]
    //     },
    //     {
    //       "facetField": "txAttrFacet_Gender",
    //       "values": [gender]
    //     }
    //   ],
    //   {headers: {
    //     "content-type": "application/json",
    //     "X-RapidAPI-Key": "6ef4ad0a16msh1fe61cc2f95c0fcp19ce78jsnc57caec7e8c2",
    //     "X-RapidAPI-Host": "zappos1.p.rapidapi.com"
    //   }}
    // ).then((response) => {
    //     
    //   setItems(response.data);
    // });
  }, []);

  const collectAttributes = (url:string) => {
    let attributes:string[] = [];
    // add colors
    getColorChoices(url).forEach((item:string) => {
      attributes.push(item); 
    });
  };

  // regex for color identification
  const getColorChoices = (url:string) => {
    console.log(url);
    const regex = /(?:aliceblue|antiquewhite|aqua|aquamarine|azure|beige|bisque|black|blanchedalmond|blue|blueviolet|brown|burlywood|cadetblue|chartreuse|chocolate|coral|cornflowerblue|cornsilk|crimson|cyan|darkblue|darkcyan|darkgoldenrod|darkgray|darkgreen|darkgrey|darkkhaki|darkmagenta|darkolivegreen|darkorange|darkorchid|darkred|darksalmon|darkseagreen|darkslateblue|darkslategray|darkslategrey|darkturquoise|darkviolet|deeppink|deepskyblue|dimgray|dimgrey|dodgerblue|firebrick|floralwhite|forestgreen|fuchsia|gainsboro|ghostwhite|gold|goldenrod|gray|green|greenyellow|grey|honeydew|hotpink|indianred|indigo|ivory|khaki|lavender|lavenderblush|lawngreen|lemonchiffon|lightblue|lightcoral|lightcyan|lightgoldenrodyellow|lightgray|lightgreen|lightgrey|lightpink|lightsalmon|lightseagreen|lightskyblue|lightslategray|lightslategrey|lightsteelblue|lightyellow|lime|limegreen|linen|magenta|maroon|mediumaquamarine|mediumblue|mediumorchid|mediumpurple|mediumseagreen|mediumslateblue|mediumspringgreen|mediumturquoise|mediumvioletred|midnightblue|mintcream|mistyrose|moccasin|navajowhite|navy|oldlace|olive|olivedrab|orange|orangered|orchid|palegoldenrod|palegreen|paleturquoise|palevioletred|papayawhip|peachpuff|peru|pink|plum|powderblue|purple|rebeccapurple|red|rosybrown|royalblue|saddlebrown|salmon|sandybrown|seagreen|seashell|sienna|silver|skyblue|slateblue|slategray|slategrey|snow|springgreen|steelblue|tan|teal|thistle|tomato|turquoise|violet|wheat|white|whitesmoke|yellow|yellowgreen)/g;
    const colormatches = url.match(regex); 
    if(colormatches) {
      return colormatches;
    } 
    return [];
  }

  return (
    <>
      <h1 className="text-6xl m-10 text-center">Pick the Styles You Like!</h1> 
        <div className="flex flex-wrap justify-center">
          {
            items &&
              items.results.map((item:any, index:number) => 
                <div key={index} className="card w-96 bg-base-100 shadow-xl m-5 hover:opacity-50"
                onClick={() => {
                  getColorChoices(item.productUrl);
                }}
              >
                  <figure><img src={`https://m.media-amazon.com/images/I/${item.msaImageId}._AC_SR1472,1840_.jpg`} alt="Shoes" /></figure>
                  <div className="card-body">
                    <h2 className="card-title">{item.productName}</h2>
                    <p>{item.brandName}</p>
                  </div>
                </div>
              )
          }
        </div>
      <button onClick={() => {
        selectionFinished();
      }} className="fixed z-90 bottom-10 right-8 btn btn-primary drop-shadow-lg text-3xl hover:drop-shadow-2xl hover:animate-bounce duration-300">Continue</button>
    </>
  )
}

function IntialSurvey ({surveyFinished}:any) {
  const [gender, setGender] = useState("Men");
  const [clothingType, setClothingType] = useState("Shirts & Tops");
  return (
    <>
      <main className="flex flex-col justify-center items-center h-screen w-screen">
        <h1 className="text-6xl">Step 1: Initial Survey</h1>
        <h1 className="text-4xl">What is your Gender?</h1> 
        <select className="select select-primary w-full max-w-xs" onChange={(e) => {
          setGender(e.target.value);
        }}>
          <option value="Man">Male</option>
          <option value="Women">Female</option>
        </select>
        <h1 className="text-4xl">Shirts or Pants?</h1> 
        <select className="select select-secondary w-full max-w-xs" onChange={(e) => {
          setClothingType(e.target.value);
        }}>
          <option value="Shirts">Shirts</option>
          <option value="Shorts">Shorts</option>
          <option value="Pants">Pants</option>
        </select>
        <button onClick={() => {
          console.log(gender);
          surveyFinished({
              gender: gender,
              clothingType: clothingType
          })
        }} className="fixed z-90 bottom-10 right-8 btn btn-primary drop-shadow-lg text-3xl hover:drop-shadow-2xl hover:animate-bounce duration-300">Continue</button>
      </main>
    </>
  )
} 
